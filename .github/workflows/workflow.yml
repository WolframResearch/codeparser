# This is a basic workflow to help you get started with Actions
 
name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  WOLFRAM_ID: ${{ secrets.WOLFRAM_ID }}
  WOLFRAM_PW: ${{ secrets.WOLFRAM_PW }}
  WOLFRAM_AK: ${{ secrets.WOLFRAM_AK }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    name: "Build Code Parser"
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y wget cmake

    - name: Install Wolfram Engine
      run: |
        wget https://account.wolfram.com/download/public/wolfram-engine/desktop/LINUX
        sudo bash LINUX -- -auto -verbose
        rm LINUX

    - name: Activate Wolfram Engine
      run: |
        /usr/bin/wolframscript -authenticate $WOLFRAM_ID $WOLFRAM_PW
        /usr/bin/wolframscript -activate $WOLFRAM_AK

    - name: Build CodeParser
      run: |
        mkdir build
        cd build
        cmake .. -DMATHEMATICA_INSTALL_DIR="/usr/local/Wolfram/WolframEngine/12.1"
        cmake --build . --target paclet

    - name: Install Paclet
      # TODO: find a way to specify the name of the paclet file instead of hardcoding.
      run: |
        ls build
        /usr/bin/wolframscript -code 'PacletInstall["./build/paclet/CodeParser-1.1.paclet"];Exit[]'
