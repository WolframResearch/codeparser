//
// AUTO GENERATED FILE
// DO NOT MODIFY
//

use crate::symbol::Symbol;

use wolfram_expr::symbol::SymbolRef;

//
// Computing TokenKind variant value
//

#[rustfmt::skip]
pub(crate) enum Group1 {
    PossibleBeginning = 0b01,
    Closer            = 0b10,
    Error             = 0b11,
    None              = 0b00,
}

pub(crate) enum Group2 {
    Empty = 0b01,
    None,
}

macro_rules! variant {
    ($count:literal, $group1:ident, Empty) => {
        variant_value($count, Group1::$group1, Group2::Empty)
    };

    ($count:literal, Empty) => {
        variant_value($count, Group1::None, Group2::Empty)
    };

    ($count:literal, $group1:ident) => {
        variant_value($count, Group1::$group1, Group2::None)
    };

    ($count:literal) => {
        variant_value($count, Group1::None, Group2::None)
    };
}

#[rustfmt::skip]
const fn variant_value(count: u16, group1: Group1, group2: Group2) -> u16 {
    // The unique count should only use the first 9 bits.
    debug_assert!(count & 0b1_1111_1111 == count);

    let group1 = group1 as u16;
    let group2 = group2 as u16;

    debug_assert!(group1 <= 3); // Must fit in 0bXX
    debug_assert!(group2 <= 3); // Must fit in 0bXX

    count | group1 << 9 | group2 << 11
}

//
// All token enums
//

#[allow(non_camel_case_types)]
#[rustfmt::skip]
#[derive(Debug, Copy, Clone, PartialEq)]
#[repr(u16)]
pub enum TokenKind {
    Unknown                                  = variant!(0),
    EndOfFile                                = variant!(1, Empty),
    Symbol                                   = variant!(2, PossibleBeginning),
    String                                   = variant!(3, PossibleBeginning),
    Integer                                  = variant!(4, PossibleBeginning),
    Real                                     = variant!(5, PossibleBeginning),
    Rational                                 = variant!(6, PossibleBeginning),
    LinearSyntaxBlob                         = variant!(7, PossibleBeginning),
    InternalNewline                          = variant!(8),
    Comment                                  = variant!(9),
    Whitespace                               = variant!(10),
    Buffer1                                  = variant!(11),
    ToplevelNewline                          = variant!(12),
    Buffer2                                  = variant!(13),
    Buffer3                                  = variant!(14),
    Buffer4                                  = variant!(15),
    Error_ExpectedEqual                      = variant!(16, Error),
    Error_Number                             = variant!(17, Error),
    Error_UnhandledCharacter                 = variant!(18, Error),
    Error_ExpectedLetterlike                 = variant!(19, Error),
    Error_Aborted                            = variant!(20, Error, Empty),
    Error_ExpectedOperand                    = variant!(21, Error, Empty),
    Error_ExpectedTag                        = variant!(22, Error, Empty),
    Error_ExpectedFile                       = variant!(23, Error, Empty),
    Error_UnexpectedCloser                   = variant!(24, Error),
    Error_PrefixImplicitNull                 = variant!(25, Error, Empty),
    Error_InfixImplicitNull                  = variant!(26, Error, Empty),
    Error_UnsafeCharacterEncoding            = variant!(27, Error),
    Error_UnterminatedComment                = variant!(28, Error),
    Error_Unterminated_First                 = variant!(28),
    Error_UnterminatedString                 = variant!(29, Error),
    Error_UnterminatedFileString             = variant!(30, Error),
    Error_UnterminatedLinearSyntaxBlob       = variant!(31, Error),
    Error_UnsupportedToken                   = variant!(32, Error),
    Error_Unterminated_End                   = variant!(32),
    Error_UnexpectedCommentCloser            = variant!(33, Error),
    Error_End                                = variant!(34, Error),
    Dot                                      = variant!(35),
    Colon                                    = variant!(36),
    OpenParen                                = variant!(37, PossibleBeginning),
    CloseParen                               = variant!(38, Closer),
    OpenSquare                               = variant!(39),
    CloseSquare                              = variant!(40, Closer),
    Comma                                    = variant!(41),
    OpenCurly                                = variant!(42, PossibleBeginning),
    CloseCurly                               = variant!(43, Closer),
    Equal                                    = variant!(44),
    Bang                                     = variant!(45, PossibleBeginning),
    Under                                    = variant!(46, PossibleBeginning),
    Less                                     = variant!(47),
    Greater                                  = variant!(48),
    Minus                                    = variant!(49, PossibleBeginning),
    Bar                                      = variant!(50),
    Semi                                     = variant!(51),
    Hash                                     = variant!(52, PossibleBeginning),
    Amp                                      = variant!(53),
    Slash                                    = variant!(54),
    At                                       = variant!(55),
    Plus                                     = variant!(56, PossibleBeginning),
    Tilde                                    = variant!(57),
    Star                                     = variant!(58),
    Caret                                    = variant!(59),
    SingleQuote                              = variant!(60),
    Percent                                  = variant!(61, PossibleBeginning),
    Question                                 = variant!(62),
    DotDot                                   = variant!(63),
    ColonColon                               = variant!(64),
    ColonEqual                               = variant!(65),
    ColonGreater                             = variant!(66),
    EqualEqual                               = variant!(67),
    UnderUnder                               = variant!(68, PossibleBeginning),
    UnderDot                                 = variant!(69, PossibleBeginning),
    LessBar                                  = variant!(70, PossibleBeginning),
    LessLess                                 = variant!(71, PossibleBeginning),
    LessGreater                              = variant!(72),
    LessEqual                                = variant!(73),
    GreaterGreater                           = variant!(74),
    GreaterEqual                             = variant!(75),
    MinusGreater                             = variant!(76),
    MinusMinus                               = variant!(77, PossibleBeginning),
    MinusEqual                               = variant!(78),
    BarBar                                   = variant!(79),
    BarGreater                               = variant!(80, Closer),
    SemiSemi                                 = variant!(81, PossibleBeginning),
    AmpAmp                                   = variant!(82),
    SlashAt                                  = variant!(83),
    SlashSemi                                = variant!(84),
    SlashDot                                 = variant!(85),
    SlashSlash                               = variant!(86),
    SlashColon                               = variant!(87),
    SlashEqual                               = variant!(88),
    SlashStar                                = variant!(89),
    AtAt                                     = variant!(90),
    AtStar                                   = variant!(91),
    PlusPlus                                 = variant!(92, PossibleBeginning),
    PlusEqual                                = variant!(93),
    TildeTilde                               = variant!(94),
    StarEqual                                = variant!(95),
    StarStar                                 = variant!(96),
    CaretEqual                               = variant!(97),
    HashHash                                 = variant!(98, PossibleBeginning),
    BangEqual                                = variant!(99),
    BangBang                                 = variant!(100, PossibleBeginning),
    QuestionQuestion                         = variant!(101),
    DotDotDot                                = variant!(102),
    EqualEqualEqual                          = variant!(103),
    EqualBangEqual                           = variant!(104),
    UnderUnderUnder                          = variant!(105, PossibleBeginning),
    SlashSlashDot                            = variant!(106),
    AtAtAt                                   = variant!(107),
    LessMinusGreater                         = variant!(108),
    SlashSlashAt                             = variant!(109),
    CaretColonEqual                          = variant!(110),
    GreaterGreaterGreater                    = variant!(111),
    BarMinusGreater                          = variant!(112),
    SlashSlashEqual                          = variant!(113),
    ColonColonOpenSquare                     = variant!(114),
    PercentPercent                           = variant!(115, PossibleBeginning),
    LinearSyntax_Bang                        = variant!(116, PossibleBeginning),
    LinearSyntax_CloseParen                  = variant!(117),
    LinearSyntax_At                          = variant!(118),
    LinearSyntax_Amp                         = variant!(119),
    LinearSyntax_Star                        = variant!(120),
    LinearSyntax_Under                       = variant!(121),
    LinearSyntax_Caret                       = variant!(122),
    LinearSyntax_Space                       = variant!(123),
    LinearSyntax_Percent                     = variant!(124),
    LinearSyntax_Plus                        = variant!(125),
    LinearSyntax_Slash                       = variant!(126),
    LinearSyntax_BackTick                    = variant!(127),
    Fake_ImplicitTimes                       = variant!(128, Empty),
    Fake_ImplicitNull                        = variant!(129, Empty),
    Fake_ImplicitOne                         = variant!(130, Empty),
    Fake_ImplicitAll                         = variant!(131, Empty),
    Boxes_OpenParenStar                      = variant!(132),
    Boxes_StarCloseParen                     = variant!(133),
    Boxes_MultiSingleQuote                   = variant!(134),
    Boxes_MultiWhitespace                    = variant!(135),
    LongName_Not                             = variant!(136, PossibleBeginning),
    LongName_PlusMinus                       = variant!(137, PossibleBeginning),
    LongName_CenterDot                       = variant!(138),
    LongName_Times                           = variant!(139),
    LongName_Divide                          = variant!(140),
    LongName_OpenCurlyQuote                  = variant!(141, PossibleBeginning),
    LongName_CloseCurlyQuote                 = variant!(142, Closer),
    LongName_OpenCurlyDoubleQuote            = variant!(143, PossibleBeginning),
    LongName_CloseCurlyDoubleQuote           = variant!(144, Closer),
    LongName_InvisibleTimes                  = variant!(145),
    LongName_LeftArrow                       = variant!(146),
    LongName_UpArrow                         = variant!(147),
    LongName_RightArrow                      = variant!(148),
    LongName_DownArrow                       = variant!(149),
    LongName_LeftRightArrow                  = variant!(150),
    LongName_UpDownArrow                     = variant!(151),
    LongName_UpperLeftArrow                  = variant!(152),
    LongName_UpperRightArrow                 = variant!(153),
    LongName_LowerRightArrow                 = variant!(154),
    LongName_LowerLeftArrow                  = variant!(155),
    LongName_LeftTeeArrow                    = variant!(156),
    LongName_UpTeeArrow                      = variant!(157),
    LongName_RightTeeArrow                   = variant!(158),
    LongName_DownTeeArrow                    = variant!(159),
    LongName_LeftVector                      = variant!(160),
    LongName_DownLeftVector                  = variant!(161),
    LongName_RightUpVector                   = variant!(162),
    LongName_LeftUpVector                    = variant!(163),
    LongName_RightVector                     = variant!(164),
    LongName_DownRightVector                 = variant!(165),
    LongName_RightDownVector                 = variant!(166),
    LongName_LeftDownVector                  = variant!(167),
    LongName_RightArrowLeftArrow             = variant!(168),
    LongName_UpArrowDownArrow                = variant!(169),
    LongName_LeftArrowRightArrow             = variant!(170),
    LongName_ReverseEquilibrium              = variant!(171),
    LongName_Equilibrium                     = variant!(172),
    LongName_DoubleLeftArrow                 = variant!(173),
    LongName_DoubleUpArrow                   = variant!(174),
    LongName_DoubleRightArrow                = variant!(175),
    LongName_DoubleDownArrow                 = variant!(176),
    LongName_DoubleLeftRightArrow            = variant!(177),
    LongName_DoubleUpDownArrow               = variant!(178),
    LongName_LeftArrowBar                    = variant!(179),
    LongName_RightArrowBar                   = variant!(180),
    LongName_DownArrowUpArrow                = variant!(181),
    LongName_ForAll                          = variant!(182, PossibleBeginning),
    LongName_PartialD                        = variant!(183),
    LongName_Exists                          = variant!(184, PossibleBeginning),
    LongName_NotExists                       = variant!(185, PossibleBeginning),
    LongName_Del                             = variant!(186, PossibleBeginning),
    LongName_Element                         = variant!(187),
    LongName_NotElement                      = variant!(188),
    LongName_ReverseElement                  = variant!(189),
    LongName_NotReverseElement               = variant!(190),
    LongName_SuchThat                        = variant!(191),
    LongName_Product                         = variant!(192, PossibleBeginning),
    LongName_Coproduct                       = variant!(193, PossibleBeginning),
    LongName_Sum                             = variant!(194, PossibleBeginning),
    LongName_Minus                           = variant!(195, PossibleBeginning),
    LongName_MinusPlus                       = variant!(196, PossibleBeginning),
    LongName_DivisionSlash                   = variant!(197),
    LongName_Backslash                       = variant!(198),
    LongName_SmallCircle                     = variant!(199),
    LongName_Sqrt                            = variant!(200, PossibleBeginning),
    LongName_CubeRoot                        = variant!(201, PossibleBeginning),
    LongName_Proportional                    = variant!(202),
    LongName_Divides                         = variant!(203),
    LongName_DoubleVerticalBar               = variant!(204),
    LongName_NotDoubleVerticalBar            = variant!(205),
    LongName_And                             = variant!(206),
    LongName_Or                              = variant!(207),
    LongName_Integral                        = variant!(208, PossibleBeginning),
    LongName_ContourIntegral                 = variant!(209, PossibleBeginning),
    LongName_DoubleContourIntegral           = variant!(210, PossibleBeginning),
    LongName_ClockwiseContourIntegral        = variant!(211, PossibleBeginning),
    LongName_CounterClockwiseContourIntegral = variant!(212, PossibleBeginning),
    LongName_Therefore                       = variant!(213),
    LongName_Because                         = variant!(214),
    LongName_Colon                           = variant!(215),
    LongName_Proportion                      = variant!(216),
    LongName_Tilde                           = variant!(217),
    LongName_VerticalTilde                   = variant!(218),
    LongName_NotTilde                        = variant!(219),
    LongName_EqualTilde                      = variant!(220),
    LongName_TildeEqual                      = variant!(221),
    LongName_NotTildeEqual                   = variant!(222),
    LongName_TildeFullEqual                  = variant!(223),
    LongName_NotTildeFullEqual               = variant!(224),
    LongName_TildeTilde                      = variant!(225),
    LongName_NotTildeTilde                   = variant!(226),
    LongName_CupCap                          = variant!(227),
    LongName_HumpDownHump                    = variant!(228),
    LongName_HumpEqual                       = variant!(229),
    LongName_DotEqual                        = variant!(230),
    LongName_NotEqual                        = variant!(231),
    LongName_Congruent                       = variant!(232),
    LongName_NotCongruent                    = variant!(233),
    LongName_LessEqual                       = variant!(234),
    LongName_GreaterEqual                    = variant!(235),
    LongName_LessFullEqual                   = variant!(236),
    LongName_GreaterFullEqual                = variant!(237),
    LongName_NotLessFullEqual                = variant!(238),
    LongName_NotGreaterFullEqual             = variant!(239),
    LongName_LessLess                        = variant!(240),
    LongName_GreaterGreater                  = variant!(241),
    LongName_NotCupCap                       = variant!(242),
    LongName_NotLess                         = variant!(243),
    LongName_NotGreater                      = variant!(244),
    LongName_NotLessEqual                    = variant!(245),
    LongName_NotGreaterEqual                 = variant!(246),
    LongName_LessTilde                       = variant!(247),
    LongName_GreaterTilde                    = variant!(248),
    LongName_NotLessTilde                    = variant!(249),
    LongName_NotGreaterTilde                 = variant!(250),
    LongName_LessGreater                     = variant!(251),
    LongName_GreaterLess                     = variant!(252),
    LongName_NotLessGreater                  = variant!(253),
    LongName_NotGreaterLess                  = variant!(254),
    LongName_Precedes                        = variant!(255),
    LongName_Succeeds                        = variant!(256),
    LongName_PrecedesSlantEqual              = variant!(257),
    LongName_SucceedsSlantEqual              = variant!(258),
    LongName_PrecedesTilde                   = variant!(259),
    LongName_SucceedsTilde                   = variant!(260),
    LongName_NotPrecedes                     = variant!(261),
    LongName_NotSucceeds                     = variant!(262),
    LongName_Subset                          = variant!(263),
    LongName_Superset                        = variant!(264),
    LongName_NotSubset                       = variant!(265),
    LongName_NotSuperset                     = variant!(266),
    LongName_SubsetEqual                     = variant!(267),
    LongName_SupersetEqual                   = variant!(268),
    LongName_NotSubsetEqual                  = variant!(269),
    LongName_NotSupersetEqual                = variant!(270),
    LongName_UnionPlus                       = variant!(271),
    LongName_SquareSubset                    = variant!(272),
    LongName_SquareSuperset                  = variant!(273),
    LongName_SquareSubsetEqual               = variant!(274),
    LongName_SquareSupersetEqual             = variant!(275),
    LongName_SquareIntersection              = variant!(276),
    LongName_SquareUnion                     = variant!(277),
    LongName_CirclePlus                      = variant!(278),
    LongName_CircleMinus                     = variant!(279),
    LongName_CircleTimes                     = variant!(280, PossibleBeginning),
    LongName_CircleDot                       = variant!(281),
    LongName_RightTee                        = variant!(282),
    LongName_LeftTee                         = variant!(283),
    LongName_DownTee                         = variant!(284),
    LongName_UpTee                           = variant!(285),
    LongName_DoubleRightTee                  = variant!(286),
    LongName_LeftTriangle                    = variant!(287),
    LongName_RightTriangle                   = variant!(288),
    LongName_LeftTriangleEqual               = variant!(289),
    LongName_RightTriangleEqual              = variant!(290),
    LongName_Xor                             = variant!(291),
    LongName_Nand                            = variant!(292),
    LongName_Nor                             = variant!(293),
    LongName_Wedge                           = variant!(294),
    LongName_Vee                             = variant!(295),
    LongName_Intersection                    = variant!(296),
    LongName_Union                           = variant!(297),
    LongName_Diamond                         = variant!(298),
    LongName_Star                            = variant!(299),
    LongName_LessEqualGreater                = variant!(300),
    LongName_GreaterEqualLess                = variant!(301),
    LongName_NotPrecedesSlantEqual           = variant!(302),
    LongName_NotSucceedsSlantEqual           = variant!(303),
    LongName_NotSquareSubsetEqual            = variant!(304),
    LongName_NotSquareSupersetEqual          = variant!(305),
    LongName_NotPrecedesTilde                = variant!(306),
    LongName_NotSucceedsTilde                = variant!(307),
    LongName_NotLeftTriangle                 = variant!(308),
    LongName_NotRightTriangle                = variant!(309),
    LongName_NotLeftTriangleEqual            = variant!(310),
    LongName_NotRightTriangleEqual           = variant!(311),
    LongName_LeftCeiling                     = variant!(312, PossibleBeginning),
    LongName_RightCeiling                    = variant!(313, Closer),
    LongName_LeftFloor                       = variant!(314, PossibleBeginning),
    LongName_RightFloor                      = variant!(315, Closer),
    LongName_Cap                             = variant!(316),
    LongName_Cup                             = variant!(317),
    LongName_LeftAngleBracket                = variant!(318, PossibleBeginning),
    LongName_RightAngleBracket               = variant!(319, Closer),
    LongName_Perpendicular                   = variant!(320),
    LongName_LongLeftArrow                   = variant!(321),
    LongName_LongRightArrow                  = variant!(322),
    LongName_LongLeftRightArrow              = variant!(323),
    LongName_DoubleLongLeftArrow             = variant!(324),
    LongName_DoubleLongRightArrow            = variant!(325),
    LongName_DoubleLongLeftRightArrow        = variant!(326),
    LongName_UpArrowBar                      = variant!(327),
    LongName_DownArrowBar                    = variant!(328),
    LongName_LeftRightVector                 = variant!(329),
    LongName_RightUpDownVector               = variant!(330),
    LongName_DownLeftRightVector             = variant!(331),
    LongName_LeftUpDownVector                = variant!(332),
    LongName_LeftVectorBar                   = variant!(333),
    LongName_RightVectorBar                  = variant!(334),
    LongName_RightUpVectorBar                = variant!(335),
    LongName_RightDownVectorBar              = variant!(336),
    LongName_DownLeftVectorBar               = variant!(337),
    LongName_DownRightVectorBar              = variant!(338),
    LongName_LeftUpVectorBar                 = variant!(339),
    LongName_LeftDownVectorBar               = variant!(340),
    LongName_LeftTeeVector                   = variant!(341),
    LongName_RightTeeVector                  = variant!(342),
    LongName_RightUpTeeVector                = variant!(343),
    LongName_RightDownTeeVector              = variant!(344),
    LongName_DownLeftTeeVector               = variant!(345),
    LongName_DownRightTeeVector              = variant!(346),
    LongName_LeftUpTeeVector                 = variant!(347),
    LongName_LeftDownTeeVector               = variant!(348),
    LongName_UpEquilibrium                   = variant!(349),
    LongName_ReverseUpEquilibrium            = variant!(350),
    LongName_RoundImplies                    = variant!(351),
    LongName_LeftTriangleBar                 = variant!(352),
    LongName_RightTriangleBar                = variant!(353),
    LongName_Equivalent                      = variant!(354),
    LongName_LessSlantEqual                  = variant!(355),
    LongName_GreaterSlantEqual               = variant!(356),
    LongName_NestedLessLess                  = variant!(357),
    LongName_NestedGreaterGreater            = variant!(358),
    LongName_PrecedesEqual                   = variant!(359),
    LongName_SucceedsEqual                   = variant!(360),
    LongName_DoubleLeftTee                   = variant!(361),
    LongName_LeftDoubleBracket               = variant!(362),
    LongName_RightDoubleBracket              = variant!(363, Closer),
    LongName_LeftAssociation                 = variant!(364, PossibleBeginning),
    LongName_RightAssociation                = variant!(365, Closer),
    LongName_TwoWayRule                      = variant!(366),
    LongName_Piecewise                       = variant!(367, PossibleBeginning),
    LongName_ImplicitPlus                    = variant!(368),
    LongName_AutoLeftMatch                   = variant!(369),
    LongName_AutoRightMatch                  = variant!(370),
    LongName_InvisiblePrefixScriptBase       = variant!(371, PossibleBeginning),
    LongName_InvisiblePostfixScriptBase      = variant!(372),
    LongName_Transpose                       = variant!(373),
    LongName_Conjugate                       = variant!(374),
    LongName_ConjugateTranspose              = variant!(375),
    LongName_HermitianConjugate              = variant!(376),
    LongName_VerticalBar                     = variant!(377),
    LongName_NotVerticalBar                  = variant!(378),
    LongName_Distributed                     = variant!(379),
    LongName_Conditioned                     = variant!(380),
    LongName_UndirectedEdge                  = variant!(381),
    LongName_DirectedEdge                    = variant!(382),
    LongName_ContinuedFractionK              = variant!(383, PossibleBeginning),
    LongName_TensorProduct                   = variant!(384),
    LongName_TensorWedge                     = variant!(385),
    LongName_ProbabilityPr                   = variant!(386, PossibleBeginning),
    LongName_ExpectationE                    = variant!(387, PossibleBeginning),
    LongName_PermutationProduct              = variant!(388),
    LongName_NotEqualTilde                   = variant!(389),
    LongName_NotHumpEqual                    = variant!(390),
    LongName_NotHumpDownHump                 = variant!(391),
    LongName_NotLeftTriangleBar              = variant!(392),
    LongName_NotRightTriangleBar             = variant!(393),
    LongName_NotLessLess                     = variant!(394),
    LongName_NotNestedLessLess               = variant!(395),
    LongName_NotLessSlantEqual               = variant!(396),
    LongName_NotGreaterGreater               = variant!(397),
    LongName_NotNestedGreaterGreater         = variant!(398),
    LongName_NotGreaterSlantEqual            = variant!(399),
    LongName_NotPrecedesEqual                = variant!(400),
    LongName_NotSucceedsEqual                = variant!(401),
    LongName_NotSquareSubset                 = variant!(402),
    LongName_NotSquareSuperset               = variant!(403),
    LongName_Equal                           = variant!(404),
    LongName_VerticalSeparator               = variant!(405),
    LongName_VectorGreater                   = variant!(406),
    LongName_VectorGreaterEqual              = variant!(407),
    LongName_VectorLess                      = variant!(408),
    LongName_VectorLessEqual                 = variant!(409),
    LongName_Limit                           = variant!(410),
    LongName_MaxLimit                        = variant!(411),
    LongName_MinLimit                        = variant!(412),
    LongName_Cross                           = variant!(413),
    LongName_Function                        = variant!(414),
    LongName_Xnor                            = variant!(415),
    LongName_DiscreteShift                   = variant!(416),
    LongName_DifferenceDelta                 = variant!(417),
    LongName_DiscreteRatio                   = variant!(418),
    LongName_RuleDelayed                     = variant!(419),
    LongName_Square                          = variant!(420, PossibleBeginning),
    LongName_Rule                            = variant!(421),
    LongName_Implies                         = variant!(422),
    LongName_ShortRightArrow                 = variant!(423),
    LongName_ShortLeftArrow                  = variant!(424),
    LongName_ShortUpArrow                    = variant!(425),
    LongName_ShortDownArrow                  = variant!(426),
    LongName_Application                     = variant!(427),
    LongName_LeftBracketingBar               = variant!(428, PossibleBeginning),
    LongName_RightBracketingBar              = variant!(429, Closer),
    LongName_LeftDoubleBracketingBar         = variant!(430, PossibleBeginning),
    LongName_RightDoubleBracketingBar        = variant!(431, Closer),
    LongName_CapitalDifferentialD            = variant!(432, PossibleBeginning),
    LongName_DifferentialD                   = variant!(433, PossibleBeginning),
    LongName_InvisibleComma                  = variant!(434),
    LongName_InvisibleApplication            = variant!(435),
    LongName_LongEqual                       = variant!(436),
}

impl TokenKind {
	pub const COUNT: usize = 437;
}

//
// AUTO GENERATED FILE
// DO NOT MODIFY
//

use crate::symbols as st;

//
// TokenKind::Integer must be 0x4 to allow setting the 0b1 bit to convert to TokenKind::REAL, and 0b10 bit to convert to TokenKind::Rational
//
const _: () = assert!(TokenKind::Integer.value() == 0x4, "Check your assumptions");
const _: () = assert!(TokenKind::Real.value() == 0x5, "Check your assumptions");
const _: () = assert!(TokenKind::Rational.value() == 0x6, "Check your assumptions");

//
// TokenKind::InternalNewline must be 0x8 to allow setting the 0b100 bit to convert to TokenKind::ToplevelNewline
//
const _: () = assert!(TokenKind::InternalNewline.value() == 0b1000, "Check your assumptions");
const _: () = assert!(TokenKind::ToplevelNewline.value() == 0b1100, "Check your assumptions");
//const _: () = assert!(TokenKind::Error_First.value() == 0x10, "Check your assumptions");

//
// TokenKind::Error_Unterminated_First must be 0x1c to allow checking 0b0_0001_11xx for isUnterminated
//
const _: () = assert!(TokenKind::Error_Unterminated_First.value() == 0x1c, "Check your assumptions");
const _: () = assert!(TokenKind::Error_Unterminated_End.value() == 0x20, "Check your assumptions");


#[allow(dead_code)]
pub fn TokenToSymbol(token: TokenKind) -> Symbol {
    use TokenKind::*;
    match token {
        Unknown => return st::Token_Unknown,
        EndOfFile => return st::EndOfFile,
        Symbol => return st::Symbol,
        String => return st::String,
        Integer => return st::Integer,
        Real => return st::Real,
        Rational => return st::Rational,
        LinearSyntaxBlob => return st::Token_LinearSyntaxBlob,
        InternalNewline => return st::Token_Newline,
        Comment => return st::Token_Comment,
        Whitespace => return st::Whitespace,
        Buffer1 => return st::Token_Buffer1,
        ToplevelNewline => return st::Token_Newline,
        Buffer2 => return st::Token_Buffer2,
        Buffer3 => return st::Token_Buffer3,
        Buffer4 => return st::Token_Buffer4,
        Error_ExpectedEqual => return st::Token_Error_ExpectedEqual,
        Error_Number => return st::Token_Error_Number,
        Error_UnhandledCharacter => return st::Token_Error_UnhandledCharacter,
        Error_ExpectedLetterlike => return st::Token_Error_ExpectedLetterlike,
        Error_Aborted => return st::Token_Error_Aborted,
        Error_ExpectedOperand => return st::Token_Error_ExpectedOperand,
        Error_ExpectedTag => return st::Token_Error_ExpectedTag,
        Error_ExpectedFile => return st::Token_Error_ExpectedFile,
        Error_UnexpectedCloser => return st::Token_Error_UnexpectedCloser,
        Error_PrefixImplicitNull => return st::Token_Error_PrefixImplicitNull,
        Error_InfixImplicitNull => return st::Token_Error_InfixImplicitNull,
        Error_UnsafeCharacterEncoding => return st::Token_Error_UnsafeCharacterEncoding,
        Error_UnterminatedComment => return st::Token_Error_UnterminatedComment,
        Error_UnterminatedString => return st::Token_Error_UnterminatedString,
        Error_UnterminatedFileString => return st::Token_Error_UnterminatedFileString,
        Error_UnterminatedLinearSyntaxBlob => return st::Token_Error_UnterminatedLinearSyntaxBlob,
        Error_UnsupportedToken => return st::Token_Error_UnsupportedToken,
        Error_UnexpectedCommentCloser => return st::Token_Error_UnexpectedCommentCloser,
        Error_End => return st::Token_Error_End,
        Dot => return st::Token_Dot,
        Colon => return st::Token_Colon,
        OpenParen => return st::Token_OpenParen,
        CloseParen => return st::Token_CloseParen,
        OpenSquare => return st::Token_OpenSquare,
        CloseSquare => return st::Token_CloseSquare,
        Comma => return st::Token_Comma,
        OpenCurly => return st::Token_OpenCurly,
        CloseCurly => return st::Token_CloseCurly,
        Equal => return st::Token_Equal,
        Bang => return st::Token_Bang,
        Under => return st::Token_Under,
        Less => return st::Token_Less,
        Greater => return st::Token_Greater,
        Minus => return st::Token_Minus,
        Bar => return st::Token_Bar,
        Semi => return st::Token_Semi,
        Hash => return st::Token_Hash,
        Amp => return st::Token_Amp,
        Slash => return st::Token_Slash,
        At => return st::Token_At,
        Plus => return st::Token_Plus,
        Tilde => return st::Token_Tilde,
        Star => return st::Token_Star,
        Caret => return st::Token_Caret,
        SingleQuote => return st::Token_SingleQuote,
        Percent => return st::Token_Percent,
        Question => return st::Token_Question,
        DotDot => return st::Token_DotDot,
        ColonColon => return st::Token_ColonColon,
        ColonEqual => return st::Token_ColonEqual,
        ColonGreater => return st::Token_ColonGreater,
        EqualEqual => return st::Token_EqualEqual,
        UnderUnder => return st::Token_UnderUnder,
        UnderDot => return st::Token_UnderDot,
        LessBar => return st::Token_LessBar,
        LessLess => return st::Token_LessLess,
        LessGreater => return st::Token_LessGreater,
        LessEqual => return st::Token_LessEqual,
        GreaterGreater => return st::Token_GreaterGreater,
        GreaterEqual => return st::Token_GreaterEqual,
        MinusGreater => return st::Token_MinusGreater,
        MinusMinus => return st::Token_MinusMinus,
        MinusEqual => return st::Token_MinusEqual,
        BarBar => return st::Token_BarBar,
        BarGreater => return st::Token_BarGreater,
        SemiSemi => return st::Token_SemiSemi,
        AmpAmp => return st::Token_AmpAmp,
        SlashAt => return st::Token_SlashAt,
        SlashSemi => return st::Token_SlashSemi,
        SlashDot => return st::Token_SlashDot,
        SlashSlash => return st::Token_SlashSlash,
        SlashColon => return st::Token_SlashColon,
        SlashEqual => return st::Token_SlashEqual,
        SlashStar => return st::Token_SlashStar,
        AtAt => return st::Token_AtAt,
        AtStar => return st::Token_AtStar,
        PlusPlus => return st::Token_PlusPlus,
        PlusEqual => return st::Token_PlusEqual,
        TildeTilde => return st::Token_TildeTilde,
        StarEqual => return st::Token_StarEqual,
        StarStar => return st::Token_StarStar,
        CaretEqual => return st::Token_CaretEqual,
        HashHash => return st::Token_HashHash,
        BangEqual => return st::Token_BangEqual,
        BangBang => return st::Token_BangBang,
        QuestionQuestion => return st::Token_QuestionQuestion,
        DotDotDot => return st::Token_DotDotDot,
        EqualEqualEqual => return st::Token_EqualEqualEqual,
        EqualBangEqual => return st::Token_EqualBangEqual,
        UnderUnderUnder => return st::Token_UnderUnderUnder,
        SlashSlashDot => return st::Token_SlashSlashDot,
        AtAtAt => return st::Token_AtAtAt,
        LessMinusGreater => return st::Token_LessMinusGreater,
        SlashSlashAt => return st::Token_SlashSlashAt,
        CaretColonEqual => return st::Token_CaretColonEqual,
        GreaterGreaterGreater => return st::Token_GreaterGreaterGreater,
        BarMinusGreater => return st::Token_BarMinusGreater,
        SlashSlashEqual => return st::Token_SlashSlashEqual,
        ColonColonOpenSquare => return st::Token_ColonColonOpenSquare,
        PercentPercent => return st::Token_PercentPercent,
        LinearSyntax_Bang => return st::Token_LinearSyntax_Bang,
        LinearSyntax_CloseParen => return st::Token_LinearSyntax_CloseParen,
        LinearSyntax_At => return st::Token_LinearSyntax_At,
        LinearSyntax_Amp => return st::Token_LinearSyntax_Amp,
        LinearSyntax_Star => return st::Token_LinearSyntax_Star,
        LinearSyntax_Under => return st::Token_LinearSyntax_Under,
        LinearSyntax_Caret => return st::Token_LinearSyntax_Caret,
        LinearSyntax_Space => return st::Token_LinearSyntax_Space,
        LinearSyntax_Percent => return st::Token_LinearSyntax_Percent,
        LinearSyntax_Plus => return st::Token_LinearSyntax_Plus,
        LinearSyntax_Slash => return st::Token_LinearSyntax_Slash,
        LinearSyntax_BackTick => return st::Token_LinearSyntax_BackTick,
        Fake_ImplicitTimes => return st::Token_Fake_ImplicitTimes,
        Fake_ImplicitNull => return st::Token_Fake_ImplicitNull,
        Fake_ImplicitOne => return st::Token_Fake_ImplicitOne,
        Fake_ImplicitAll => return st::Token_Fake_ImplicitAll,
        Boxes_OpenParenStar => return st::Token_Boxes_OpenParenStar,
        Boxes_StarCloseParen => return st::Token_Boxes_StarCloseParen,
        Boxes_MultiSingleQuote => return st::Token_Boxes_MultiSingleQuote,
        Boxes_MultiWhitespace => return st::Token_Boxes_MultiWhitespace,
        LongName_Not => return st::Token_LongName_Not,
        LongName_PlusMinus => return st::Token_LongName_PlusMinus,
        LongName_CenterDot => return st::Token_LongName_CenterDot,
        LongName_Times => return st::Token_LongName_Times,
        LongName_Divide => return st::Token_LongName_Divide,
        LongName_OpenCurlyQuote => return st::Token_LongName_OpenCurlyQuote,
        LongName_CloseCurlyQuote => return st::Token_LongName_CloseCurlyQuote,
        LongName_OpenCurlyDoubleQuote => return st::Token_LongName_OpenCurlyDoubleQuote,
        LongName_CloseCurlyDoubleQuote => return st::Token_LongName_CloseCurlyDoubleQuote,
        LongName_InvisibleTimes => return st::Token_LongName_InvisibleTimes,
        LongName_LeftArrow => return st::Token_LongName_LeftArrow,
        LongName_UpArrow => return st::Token_LongName_UpArrow,
        LongName_RightArrow => return st::Token_LongName_RightArrow,
        LongName_DownArrow => return st::Token_LongName_DownArrow,
        LongName_LeftRightArrow => return st::Token_LongName_LeftRightArrow,
        LongName_UpDownArrow => return st::Token_LongName_UpDownArrow,
        LongName_UpperLeftArrow => return st::Token_LongName_UpperLeftArrow,
        LongName_UpperRightArrow => return st::Token_LongName_UpperRightArrow,
        LongName_LowerRightArrow => return st::Token_LongName_LowerRightArrow,
        LongName_LowerLeftArrow => return st::Token_LongName_LowerLeftArrow,
        LongName_LeftTeeArrow => return st::Token_LongName_LeftTeeArrow,
        LongName_UpTeeArrow => return st::Token_LongName_UpTeeArrow,
        LongName_RightTeeArrow => return st::Token_LongName_RightTeeArrow,
        LongName_DownTeeArrow => return st::Token_LongName_DownTeeArrow,
        LongName_LeftVector => return st::Token_LongName_LeftVector,
        LongName_DownLeftVector => return st::Token_LongName_DownLeftVector,
        LongName_RightUpVector => return st::Token_LongName_RightUpVector,
        LongName_LeftUpVector => return st::Token_LongName_LeftUpVector,
        LongName_RightVector => return st::Token_LongName_RightVector,
        LongName_DownRightVector => return st::Token_LongName_DownRightVector,
        LongName_RightDownVector => return st::Token_LongName_RightDownVector,
        LongName_LeftDownVector => return st::Token_LongName_LeftDownVector,
        LongName_RightArrowLeftArrow => return st::Token_LongName_RightArrowLeftArrow,
        LongName_UpArrowDownArrow => return st::Token_LongName_UpArrowDownArrow,
        LongName_LeftArrowRightArrow => return st::Token_LongName_LeftArrowRightArrow,
        LongName_ReverseEquilibrium => return st::Token_LongName_ReverseEquilibrium,
        LongName_Equilibrium => return st::Token_LongName_Equilibrium,
        LongName_DoubleLeftArrow => return st::Token_LongName_DoubleLeftArrow,
        LongName_DoubleUpArrow => return st::Token_LongName_DoubleUpArrow,
        LongName_DoubleRightArrow => return st::Token_LongName_DoubleRightArrow,
        LongName_DoubleDownArrow => return st::Token_LongName_DoubleDownArrow,
        LongName_DoubleLeftRightArrow => return st::Token_LongName_DoubleLeftRightArrow,
        LongName_DoubleUpDownArrow => return st::Token_LongName_DoubleUpDownArrow,
        LongName_LeftArrowBar => return st::Token_LongName_LeftArrowBar,
        LongName_RightArrowBar => return st::Token_LongName_RightArrowBar,
        LongName_DownArrowUpArrow => return st::Token_LongName_DownArrowUpArrow,
        LongName_ForAll => return st::Token_LongName_ForAll,
        LongName_PartialD => return st::Token_LongName_PartialD,
        LongName_Exists => return st::Token_LongName_Exists,
        LongName_NotExists => return st::Token_LongName_NotExists,
        LongName_Del => return st::Token_LongName_Del,
        LongName_Element => return st::Token_LongName_Element,
        LongName_NotElement => return st::Token_LongName_NotElement,
        LongName_ReverseElement => return st::Token_LongName_ReverseElement,
        LongName_NotReverseElement => return st::Token_LongName_NotReverseElement,
        LongName_SuchThat => return st::Token_LongName_SuchThat,
        LongName_Product => return st::Token_LongName_Product,
        LongName_Coproduct => return st::Token_LongName_Coproduct,
        LongName_Sum => return st::Token_LongName_Sum,
        LongName_Minus => return st::Token_LongName_Minus,
        LongName_MinusPlus => return st::Token_LongName_MinusPlus,
        LongName_DivisionSlash => return st::Token_LongName_DivisionSlash,
        LongName_Backslash => return st::Token_LongName_Backslash,
        LongName_SmallCircle => return st::Token_LongName_SmallCircle,
        LongName_Sqrt => return st::Token_LongName_Sqrt,
        LongName_CubeRoot => return st::Token_LongName_CubeRoot,
        LongName_Proportional => return st::Token_LongName_Proportional,
        LongName_Divides => return st::Token_LongName_Divides,
        LongName_DoubleVerticalBar => return st::Token_LongName_DoubleVerticalBar,
        LongName_NotDoubleVerticalBar => return st::Token_LongName_NotDoubleVerticalBar,
        LongName_And => return st::Token_LongName_And,
        LongName_Or => return st::Token_LongName_Or,
        LongName_Integral => return st::Token_LongName_Integral,
        LongName_ContourIntegral => return st::Token_LongName_ContourIntegral,
        LongName_DoubleContourIntegral => return st::Token_LongName_DoubleContourIntegral,
        LongName_ClockwiseContourIntegral => return st::Token_LongName_ClockwiseContourIntegral,
        LongName_CounterClockwiseContourIntegral => return st::Token_LongName_CounterClockwiseContourIntegral,
        LongName_Therefore => return st::Token_LongName_Therefore,
        LongName_Because => return st::Token_LongName_Because,
        LongName_Colon => return st::Token_LongName_Colon,
        LongName_Proportion => return st::Token_LongName_Proportion,
        LongName_Tilde => return st::Token_LongName_Tilde,
        LongName_VerticalTilde => return st::Token_LongName_VerticalTilde,
        LongName_NotTilde => return st::Token_LongName_NotTilde,
        LongName_EqualTilde => return st::Token_LongName_EqualTilde,
        LongName_TildeEqual => return st::Token_LongName_TildeEqual,
        LongName_NotTildeEqual => return st::Token_LongName_NotTildeEqual,
        LongName_TildeFullEqual => return st::Token_LongName_TildeFullEqual,
        LongName_NotTildeFullEqual => return st::Token_LongName_NotTildeFullEqual,
        LongName_TildeTilde => return st::Token_LongName_TildeTilde,
        LongName_NotTildeTilde => return st::Token_LongName_NotTildeTilde,
        LongName_CupCap => return st::Token_LongName_CupCap,
        LongName_HumpDownHump => return st::Token_LongName_HumpDownHump,
        LongName_HumpEqual => return st::Token_LongName_HumpEqual,
        LongName_DotEqual => return st::Token_LongName_DotEqual,
        LongName_NotEqual => return st::Token_LongName_NotEqual,
        LongName_Congruent => return st::Token_LongName_Congruent,
        LongName_NotCongruent => return st::Token_LongName_NotCongruent,
        LongName_LessEqual => return st::Token_LongName_LessEqual,
        LongName_GreaterEqual => return st::Token_LongName_GreaterEqual,
        LongName_LessFullEqual => return st::Token_LongName_LessFullEqual,
        LongName_GreaterFullEqual => return st::Token_LongName_GreaterFullEqual,
        LongName_NotLessFullEqual => return st::Token_LongName_NotLessFullEqual,
        LongName_NotGreaterFullEqual => return st::Token_LongName_NotGreaterFullEqual,
        LongName_LessLess => return st::Token_LongName_LessLess,
        LongName_GreaterGreater => return st::Token_LongName_GreaterGreater,
        LongName_NotCupCap => return st::Token_LongName_NotCupCap,
        LongName_NotLess => return st::Token_LongName_NotLess,
        LongName_NotGreater => return st::Token_LongName_NotGreater,
        LongName_NotLessEqual => return st::Token_LongName_NotLessEqual,
        LongName_NotGreaterEqual => return st::Token_LongName_NotGreaterEqual,
        LongName_LessTilde => return st::Token_LongName_LessTilde,
        LongName_GreaterTilde => return st::Token_LongName_GreaterTilde,
        LongName_NotLessTilde => return st::Token_LongName_NotLessTilde,
        LongName_NotGreaterTilde => return st::Token_LongName_NotGreaterTilde,
        LongName_LessGreater => return st::Token_LongName_LessGreater,
        LongName_GreaterLess => return st::Token_LongName_GreaterLess,
        LongName_NotLessGreater => return st::Token_LongName_NotLessGreater,
        LongName_NotGreaterLess => return st::Token_LongName_NotGreaterLess,
        LongName_Precedes => return st::Token_LongName_Precedes,
        LongName_Succeeds => return st::Token_LongName_Succeeds,
        LongName_PrecedesSlantEqual => return st::Token_LongName_PrecedesSlantEqual,
        LongName_SucceedsSlantEqual => return st::Token_LongName_SucceedsSlantEqual,
        LongName_PrecedesTilde => return st::Token_LongName_PrecedesTilde,
        LongName_SucceedsTilde => return st::Token_LongName_SucceedsTilde,
        LongName_NotPrecedes => return st::Token_LongName_NotPrecedes,
        LongName_NotSucceeds => return st::Token_LongName_NotSucceeds,
        LongName_Subset => return st::Token_LongName_Subset,
        LongName_Superset => return st::Token_LongName_Superset,
        LongName_NotSubset => return st::Token_LongName_NotSubset,
        LongName_NotSuperset => return st::Token_LongName_NotSuperset,
        LongName_SubsetEqual => return st::Token_LongName_SubsetEqual,
        LongName_SupersetEqual => return st::Token_LongName_SupersetEqual,
        LongName_NotSubsetEqual => return st::Token_LongName_NotSubsetEqual,
        LongName_NotSupersetEqual => return st::Token_LongName_NotSupersetEqual,
        LongName_UnionPlus => return st::Token_LongName_UnionPlus,
        LongName_SquareSubset => return st::Token_LongName_SquareSubset,
        LongName_SquareSuperset => return st::Token_LongName_SquareSuperset,
        LongName_SquareSubsetEqual => return st::Token_LongName_SquareSubsetEqual,
        LongName_SquareSupersetEqual => return st::Token_LongName_SquareSupersetEqual,
        LongName_SquareIntersection => return st::Token_LongName_SquareIntersection,
        LongName_SquareUnion => return st::Token_LongName_SquareUnion,
        LongName_CirclePlus => return st::Token_LongName_CirclePlus,
        LongName_CircleMinus => return st::Token_LongName_CircleMinus,
        LongName_CircleTimes => return st::Token_LongName_CircleTimes,
        LongName_CircleDot => return st::Token_LongName_CircleDot,
        LongName_RightTee => return st::Token_LongName_RightTee,
        LongName_LeftTee => return st::Token_LongName_LeftTee,
        LongName_DownTee => return st::Token_LongName_DownTee,
        LongName_UpTee => return st::Token_LongName_UpTee,
        LongName_DoubleRightTee => return st::Token_LongName_DoubleRightTee,
        LongName_LeftTriangle => return st::Token_LongName_LeftTriangle,
        LongName_RightTriangle => return st::Token_LongName_RightTriangle,
        LongName_LeftTriangleEqual => return st::Token_LongName_LeftTriangleEqual,
        LongName_RightTriangleEqual => return st::Token_LongName_RightTriangleEqual,
        LongName_Xor => return st::Token_LongName_Xor,
        LongName_Nand => return st::Token_LongName_Nand,
        LongName_Nor => return st::Token_LongName_Nor,
        LongName_Wedge => return st::Token_LongName_Wedge,
        LongName_Vee => return st::Token_LongName_Vee,
        LongName_Intersection => return st::Token_LongName_Intersection,
        LongName_Union => return st::Token_LongName_Union,
        LongName_Diamond => return st::Token_LongName_Diamond,
        LongName_Star => return st::Token_LongName_Star,
        LongName_LessEqualGreater => return st::Token_LongName_LessEqualGreater,
        LongName_GreaterEqualLess => return st::Token_LongName_GreaterEqualLess,
        LongName_NotPrecedesSlantEqual => return st::Token_LongName_NotPrecedesSlantEqual,
        LongName_NotSucceedsSlantEqual => return st::Token_LongName_NotSucceedsSlantEqual,
        LongName_NotSquareSubsetEqual => return st::Token_LongName_NotSquareSubsetEqual,
        LongName_NotSquareSupersetEqual => return st::Token_LongName_NotSquareSupersetEqual,
        LongName_NotPrecedesTilde => return st::Token_LongName_NotPrecedesTilde,
        LongName_NotSucceedsTilde => return st::Token_LongName_NotSucceedsTilde,
        LongName_NotLeftTriangle => return st::Token_LongName_NotLeftTriangle,
        LongName_NotRightTriangle => return st::Token_LongName_NotRightTriangle,
        LongName_NotLeftTriangleEqual => return st::Token_LongName_NotLeftTriangleEqual,
        LongName_NotRightTriangleEqual => return st::Token_LongName_NotRightTriangleEqual,
        LongName_LeftCeiling => return st::Token_LongName_LeftCeiling,
        LongName_RightCeiling => return st::Token_LongName_RightCeiling,
        LongName_LeftFloor => return st::Token_LongName_LeftFloor,
        LongName_RightFloor => return st::Token_LongName_RightFloor,
        LongName_Cap => return st::Token_LongName_Cap,
        LongName_Cup => return st::Token_LongName_Cup,
        LongName_LeftAngleBracket => return st::Token_LongName_LeftAngleBracket,
        LongName_RightAngleBracket => return st::Token_LongName_RightAngleBracket,
        LongName_Perpendicular => return st::Token_LongName_Perpendicular,
        LongName_LongLeftArrow => return st::Token_LongName_LongLeftArrow,
        LongName_LongRightArrow => return st::Token_LongName_LongRightArrow,
        LongName_LongLeftRightArrow => return st::Token_LongName_LongLeftRightArrow,
        LongName_DoubleLongLeftArrow => return st::Token_LongName_DoubleLongLeftArrow,
        LongName_DoubleLongRightArrow => return st::Token_LongName_DoubleLongRightArrow,
        LongName_DoubleLongLeftRightArrow => return st::Token_LongName_DoubleLongLeftRightArrow,
        LongName_UpArrowBar => return st::Token_LongName_UpArrowBar,
        LongName_DownArrowBar => return st::Token_LongName_DownArrowBar,
        LongName_LeftRightVector => return st::Token_LongName_LeftRightVector,
        LongName_RightUpDownVector => return st::Token_LongName_RightUpDownVector,
        LongName_DownLeftRightVector => return st::Token_LongName_DownLeftRightVector,
        LongName_LeftUpDownVector => return st::Token_LongName_LeftUpDownVector,
        LongName_LeftVectorBar => return st::Token_LongName_LeftVectorBar,
        LongName_RightVectorBar => return st::Token_LongName_RightVectorBar,
        LongName_RightUpVectorBar => return st::Token_LongName_RightUpVectorBar,
        LongName_RightDownVectorBar => return st::Token_LongName_RightDownVectorBar,
        LongName_DownLeftVectorBar => return st::Token_LongName_DownLeftVectorBar,
        LongName_DownRightVectorBar => return st::Token_LongName_DownRightVectorBar,
        LongName_LeftUpVectorBar => return st::Token_LongName_LeftUpVectorBar,
        LongName_LeftDownVectorBar => return st::Token_LongName_LeftDownVectorBar,
        LongName_LeftTeeVector => return st::Token_LongName_LeftTeeVector,
        LongName_RightTeeVector => return st::Token_LongName_RightTeeVector,
        LongName_RightUpTeeVector => return st::Token_LongName_RightUpTeeVector,
        LongName_RightDownTeeVector => return st::Token_LongName_RightDownTeeVector,
        LongName_DownLeftTeeVector => return st::Token_LongName_DownLeftTeeVector,
        LongName_DownRightTeeVector => return st::Token_LongName_DownRightTeeVector,
        LongName_LeftUpTeeVector => return st::Token_LongName_LeftUpTeeVector,
        LongName_LeftDownTeeVector => return st::Token_LongName_LeftDownTeeVector,
        LongName_UpEquilibrium => return st::Token_LongName_UpEquilibrium,
        LongName_ReverseUpEquilibrium => return st::Token_LongName_ReverseUpEquilibrium,
        LongName_RoundImplies => return st::Token_LongName_RoundImplies,
        LongName_LeftTriangleBar => return st::Token_LongName_LeftTriangleBar,
        LongName_RightTriangleBar => return st::Token_LongName_RightTriangleBar,
        LongName_Equivalent => return st::Token_LongName_Equivalent,
        LongName_LessSlantEqual => return st::Token_LongName_LessSlantEqual,
        LongName_GreaterSlantEqual => return st::Token_LongName_GreaterSlantEqual,
        LongName_NestedLessLess => return st::Token_LongName_NestedLessLess,
        LongName_NestedGreaterGreater => return st::Token_LongName_NestedGreaterGreater,
        LongName_PrecedesEqual => return st::Token_LongName_PrecedesEqual,
        LongName_SucceedsEqual => return st::Token_LongName_SucceedsEqual,
        LongName_DoubleLeftTee => return st::Token_LongName_DoubleLeftTee,
        LongName_LeftDoubleBracket => return st::Token_LongName_LeftDoubleBracket,
        LongName_RightDoubleBracket => return st::Token_LongName_RightDoubleBracket,
        LongName_LeftAssociation => return st::Token_LongName_LeftAssociation,
        LongName_RightAssociation => return st::Token_LongName_RightAssociation,
        LongName_TwoWayRule => return st::Token_LongName_TwoWayRule,
        LongName_Piecewise => return st::Token_LongName_Piecewise,
        LongName_ImplicitPlus => return st::Token_LongName_ImplicitPlus,
        LongName_AutoLeftMatch => return st::Token_LongName_AutoLeftMatch,
        LongName_AutoRightMatch => return st::Token_LongName_AutoRightMatch,
        LongName_InvisiblePrefixScriptBase => return st::Token_LongName_InvisiblePrefixScriptBase,
        LongName_InvisiblePostfixScriptBase => return st::Token_LongName_InvisiblePostfixScriptBase,
        LongName_Transpose => return st::Token_LongName_Transpose,
        LongName_Conjugate => return st::Token_LongName_Conjugate,
        LongName_ConjugateTranspose => return st::Token_LongName_ConjugateTranspose,
        LongName_HermitianConjugate => return st::Token_LongName_HermitianConjugate,
        LongName_VerticalBar => return st::Token_LongName_VerticalBar,
        LongName_NotVerticalBar => return st::Token_LongName_NotVerticalBar,
        LongName_Distributed => return st::Token_LongName_Distributed,
        LongName_Conditioned => return st::Token_LongName_Conditioned,
        LongName_UndirectedEdge => return st::Token_LongName_UndirectedEdge,
        LongName_DirectedEdge => return st::Token_LongName_DirectedEdge,
        LongName_ContinuedFractionK => return st::Token_LongName_ContinuedFractionK,
        LongName_TensorProduct => return st::Token_LongName_TensorProduct,
        LongName_TensorWedge => return st::Token_LongName_TensorWedge,
        LongName_ProbabilityPr => return st::Token_LongName_ProbabilityPr,
        LongName_ExpectationE => return st::Token_LongName_ExpectationE,
        LongName_PermutationProduct => return st::Token_LongName_PermutationProduct,
        LongName_NotEqualTilde => return st::Token_LongName_NotEqualTilde,
        LongName_NotHumpEqual => return st::Token_LongName_NotHumpEqual,
        LongName_NotHumpDownHump => return st::Token_LongName_NotHumpDownHump,
        LongName_NotLeftTriangleBar => return st::Token_LongName_NotLeftTriangleBar,
        LongName_NotRightTriangleBar => return st::Token_LongName_NotRightTriangleBar,
        LongName_NotLessLess => return st::Token_LongName_NotLessLess,
        LongName_NotNestedLessLess => return st::Token_LongName_NotNestedLessLess,
        LongName_NotLessSlantEqual => return st::Token_LongName_NotLessSlantEqual,
        LongName_NotGreaterGreater => return st::Token_LongName_NotGreaterGreater,
        LongName_NotNestedGreaterGreater => return st::Token_LongName_NotNestedGreaterGreater,
        LongName_NotGreaterSlantEqual => return st::Token_LongName_NotGreaterSlantEqual,
        LongName_NotPrecedesEqual => return st::Token_LongName_NotPrecedesEqual,
        LongName_NotSucceedsEqual => return st::Token_LongName_NotSucceedsEqual,
        LongName_NotSquareSubset => return st::Token_LongName_NotSquareSubset,
        LongName_NotSquareSuperset => return st::Token_LongName_NotSquareSuperset,
        LongName_Equal => return st::Token_LongName_Equal,
        LongName_VerticalSeparator => return st::Token_LongName_VerticalSeparator,
        LongName_VectorGreater => return st::Token_LongName_VectorGreater,
        LongName_VectorGreaterEqual => return st::Token_LongName_VectorGreaterEqual,
        LongName_VectorLess => return st::Token_LongName_VectorLess,
        LongName_VectorLessEqual => return st::Token_LongName_VectorLessEqual,
        LongName_Limit => return st::Token_LongName_Limit,
        LongName_MaxLimit => return st::Token_LongName_MaxLimit,
        LongName_MinLimit => return st::Token_LongName_MinLimit,
        LongName_Cross => return st::Token_LongName_Cross,
        LongName_Function => return st::Token_LongName_Function,
        LongName_Xnor => return st::Token_LongName_Xnor,
        LongName_DiscreteShift => return st::Token_LongName_DiscreteShift,
        LongName_DifferenceDelta => return st::Token_LongName_DifferenceDelta,
        LongName_DiscreteRatio => return st::Token_LongName_DiscreteRatio,
        LongName_RuleDelayed => return st::Token_LongName_RuleDelayed,
        LongName_Square => return st::Token_LongName_Square,
        LongName_Rule => return st::Token_LongName_Rule,
        LongName_Implies => return st::Token_LongName_Implies,
        LongName_ShortRightArrow => return st::Token_LongName_ShortRightArrow,
        LongName_ShortLeftArrow => return st::Token_LongName_ShortLeftArrow,
        LongName_ShortUpArrow => return st::Token_LongName_ShortUpArrow,
        LongName_ShortDownArrow => return st::Token_LongName_ShortDownArrow,
        LongName_Application => return st::Token_LongName_Application,
        LongName_LeftBracketingBar => return st::Token_LongName_LeftBracketingBar,
        LongName_RightBracketingBar => return st::Token_LongName_RightBracketingBar,
        LongName_LeftDoubleBracketingBar => return st::Token_LongName_LeftDoubleBracketingBar,
        LongName_RightDoubleBracketingBar => return st::Token_LongName_RightDoubleBracketingBar,
        LongName_CapitalDifferentialD => return st::Token_LongName_CapitalDifferentialD,
        LongName_DifferentialD => return st::Token_LongName_DifferentialD,
        LongName_InvisibleComma => return st::Token_LongName_InvisibleComma,
        LongName_InvisibleApplication => return st::Token_LongName_InvisibleApplication,
        LongName_LongEqual => return st::Token_LongName_LongEqual,
        _ => panic!("Unhandled token type"),
    }
}

pub fn SymbolToToken(symbol: SymbolRef) -> Option<TokenKind> {
    use TokenKind::*;
    let token = match symbol {
        st::Token_Unknown => Unknown,
        st::EndOfFile => EndOfFile,
        st::Symbol => Symbol,
        st::String => String,
        st::Integer => Integer,
        st::Real => Real,
        st::Rational => Rational,
        st::Token_LinearSyntaxBlob => LinearSyntaxBlob,
        st::Token_Newline => InternalNewline,
        st::Token_Comment => Comment,
        st::Whitespace => Whitespace,
        st::Token_Buffer1 => Buffer1,
        st::Token_Newline => ToplevelNewline,
        st::Token_Buffer2 => Buffer2,
        st::Token_Buffer3 => Buffer3,
        st::Token_Buffer4 => Buffer4,
        st::Token_Error_ExpectedEqual => Error_ExpectedEqual,
        st::Token_Error_Number => Error_Number,
        st::Token_Error_UnhandledCharacter => Error_UnhandledCharacter,
        st::Token_Error_ExpectedLetterlike => Error_ExpectedLetterlike,
        st::Token_Error_Aborted => Error_Aborted,
        st::Token_Error_ExpectedOperand => Error_ExpectedOperand,
        st::Token_Error_ExpectedTag => Error_ExpectedTag,
        st::Token_Error_ExpectedFile => Error_ExpectedFile,
        st::Token_Error_UnexpectedCloser => Error_UnexpectedCloser,
        st::Token_Error_PrefixImplicitNull => Error_PrefixImplicitNull,
        st::Token_Error_InfixImplicitNull => Error_InfixImplicitNull,
        st::Token_Error_UnsafeCharacterEncoding => Error_UnsafeCharacterEncoding,
        st::Token_Error_UnterminatedComment => Error_UnterminatedComment,
        st::Token_Error_UnterminatedString => Error_UnterminatedString,
        st::Token_Error_UnterminatedFileString => Error_UnterminatedFileString,
        st::Token_Error_UnterminatedLinearSyntaxBlob => Error_UnterminatedLinearSyntaxBlob,
        st::Token_Error_UnsupportedToken => Error_UnsupportedToken,
        st::Token_Error_UnexpectedCommentCloser => Error_UnexpectedCommentCloser,
        st::Token_Error_End => Error_End,
        st::Token_Dot => Dot,
        st::Token_Colon => Colon,
        st::Token_OpenParen => OpenParen,
        st::Token_CloseParen => CloseParen,
        st::Token_OpenSquare => OpenSquare,
        st::Token_CloseSquare => CloseSquare,
        st::Token_Comma => Comma,
        st::Token_OpenCurly => OpenCurly,
        st::Token_CloseCurly => CloseCurly,
        st::Token_Equal => Equal,
        st::Token_Bang => Bang,
        st::Token_Under => Under,
        st::Token_Less => Less,
        st::Token_Greater => Greater,
        st::Token_Minus => Minus,
        st::Token_Bar => Bar,
        st::Token_Semi => Semi,
        st::Token_Hash => Hash,
        st::Token_Amp => Amp,
        st::Token_Slash => Slash,
        st::Token_At => At,
        st::Token_Plus => Plus,
        st::Token_Tilde => Tilde,
        st::Token_Star => Star,
        st::Token_Caret => Caret,
        st::Token_SingleQuote => SingleQuote,
        st::Token_Percent => Percent,
        st::Token_Question => Question,
        st::Token_DotDot => DotDot,
        st::Token_ColonColon => ColonColon,
        st::Token_ColonEqual => ColonEqual,
        st::Token_ColonGreater => ColonGreater,
        st::Token_EqualEqual => EqualEqual,
        st::Token_UnderUnder => UnderUnder,
        st::Token_UnderDot => UnderDot,
        st::Token_LessBar => LessBar,
        st::Token_LessLess => LessLess,
        st::Token_LessGreater => LessGreater,
        st::Token_LessEqual => LessEqual,
        st::Token_GreaterGreater => GreaterGreater,
        st::Token_GreaterEqual => GreaterEqual,
        st::Token_MinusGreater => MinusGreater,
        st::Token_MinusMinus => MinusMinus,
        st::Token_MinusEqual => MinusEqual,
        st::Token_BarBar => BarBar,
        st::Token_BarGreater => BarGreater,
        st::Token_SemiSemi => SemiSemi,
        st::Token_AmpAmp => AmpAmp,
        st::Token_SlashAt => SlashAt,
        st::Token_SlashSemi => SlashSemi,
        st::Token_SlashDot => SlashDot,
        st::Token_SlashSlash => SlashSlash,
        st::Token_SlashColon => SlashColon,
        st::Token_SlashEqual => SlashEqual,
        st::Token_SlashStar => SlashStar,
        st::Token_AtAt => AtAt,
        st::Token_AtStar => AtStar,
        st::Token_PlusPlus => PlusPlus,
        st::Token_PlusEqual => PlusEqual,
        st::Token_TildeTilde => TildeTilde,
        st::Token_StarEqual => StarEqual,
        st::Token_StarStar => StarStar,
        st::Token_CaretEqual => CaretEqual,
        st::Token_HashHash => HashHash,
        st::Token_BangEqual => BangEqual,
        st::Token_BangBang => BangBang,
        st::Token_QuestionQuestion => QuestionQuestion,
        st::Token_DotDotDot => DotDotDot,
        st::Token_EqualEqualEqual => EqualEqualEqual,
        st::Token_EqualBangEqual => EqualBangEqual,
        st::Token_UnderUnderUnder => UnderUnderUnder,
        st::Token_SlashSlashDot => SlashSlashDot,
        st::Token_AtAtAt => AtAtAt,
        st::Token_LessMinusGreater => LessMinusGreater,
        st::Token_SlashSlashAt => SlashSlashAt,
        st::Token_CaretColonEqual => CaretColonEqual,
        st::Token_GreaterGreaterGreater => GreaterGreaterGreater,
        st::Token_BarMinusGreater => BarMinusGreater,
        st::Token_SlashSlashEqual => SlashSlashEqual,
        st::Token_ColonColonOpenSquare => ColonColonOpenSquare,
        st::Token_PercentPercent => PercentPercent,
        st::Token_LinearSyntax_Bang => LinearSyntax_Bang,
        st::Token_LinearSyntax_CloseParen => LinearSyntax_CloseParen,
        st::Token_LinearSyntax_At => LinearSyntax_At,
        st::Token_LinearSyntax_Amp => LinearSyntax_Amp,
        st::Token_LinearSyntax_Star => LinearSyntax_Star,
        st::Token_LinearSyntax_Under => LinearSyntax_Under,
        st::Token_LinearSyntax_Caret => LinearSyntax_Caret,
        st::Token_LinearSyntax_Space => LinearSyntax_Space,
        st::Token_LinearSyntax_Percent => LinearSyntax_Percent,
        st::Token_LinearSyntax_Plus => LinearSyntax_Plus,
        st::Token_LinearSyntax_Slash => LinearSyntax_Slash,
        st::Token_LinearSyntax_BackTick => LinearSyntax_BackTick,
        st::Token_Fake_ImplicitTimes => Fake_ImplicitTimes,
        st::Token_Fake_ImplicitNull => Fake_ImplicitNull,
        st::Token_Fake_ImplicitOne => Fake_ImplicitOne,
        st::Token_Fake_ImplicitAll => Fake_ImplicitAll,
        st::Token_Boxes_OpenParenStar => Boxes_OpenParenStar,
        st::Token_Boxes_StarCloseParen => Boxes_StarCloseParen,
        st::Token_Boxes_MultiSingleQuote => Boxes_MultiSingleQuote,
        st::Token_Boxes_MultiWhitespace => Boxes_MultiWhitespace,
        st::Token_LongName_Not => LongName_Not,
        st::Token_LongName_PlusMinus => LongName_PlusMinus,
        st::Token_LongName_CenterDot => LongName_CenterDot,
        st::Token_LongName_Times => LongName_Times,
        st::Token_LongName_Divide => LongName_Divide,
        st::Token_LongName_OpenCurlyQuote => LongName_OpenCurlyQuote,
        st::Token_LongName_CloseCurlyQuote => LongName_CloseCurlyQuote,
        st::Token_LongName_OpenCurlyDoubleQuote => LongName_OpenCurlyDoubleQuote,
        st::Token_LongName_CloseCurlyDoubleQuote => LongName_CloseCurlyDoubleQuote,
        st::Token_LongName_InvisibleTimes => LongName_InvisibleTimes,
        st::Token_LongName_LeftArrow => LongName_LeftArrow,
        st::Token_LongName_UpArrow => LongName_UpArrow,
        st::Token_LongName_RightArrow => LongName_RightArrow,
        st::Token_LongName_DownArrow => LongName_DownArrow,
        st::Token_LongName_LeftRightArrow => LongName_LeftRightArrow,
        st::Token_LongName_UpDownArrow => LongName_UpDownArrow,
        st::Token_LongName_UpperLeftArrow => LongName_UpperLeftArrow,
        st::Token_LongName_UpperRightArrow => LongName_UpperRightArrow,
        st::Token_LongName_LowerRightArrow => LongName_LowerRightArrow,
        st::Token_LongName_LowerLeftArrow => LongName_LowerLeftArrow,
        st::Token_LongName_LeftTeeArrow => LongName_LeftTeeArrow,
        st::Token_LongName_UpTeeArrow => LongName_UpTeeArrow,
        st::Token_LongName_RightTeeArrow => LongName_RightTeeArrow,
        st::Token_LongName_DownTeeArrow => LongName_DownTeeArrow,
        st::Token_LongName_LeftVector => LongName_LeftVector,
        st::Token_LongName_DownLeftVector => LongName_DownLeftVector,
        st::Token_LongName_RightUpVector => LongName_RightUpVector,
        st::Token_LongName_LeftUpVector => LongName_LeftUpVector,
        st::Token_LongName_RightVector => LongName_RightVector,
        st::Token_LongName_DownRightVector => LongName_DownRightVector,
        st::Token_LongName_RightDownVector => LongName_RightDownVector,
        st::Token_LongName_LeftDownVector => LongName_LeftDownVector,
        st::Token_LongName_RightArrowLeftArrow => LongName_RightArrowLeftArrow,
        st::Token_LongName_UpArrowDownArrow => LongName_UpArrowDownArrow,
        st::Token_LongName_LeftArrowRightArrow => LongName_LeftArrowRightArrow,
        st::Token_LongName_ReverseEquilibrium => LongName_ReverseEquilibrium,
        st::Token_LongName_Equilibrium => LongName_Equilibrium,
        st::Token_LongName_DoubleLeftArrow => LongName_DoubleLeftArrow,
        st::Token_LongName_DoubleUpArrow => LongName_DoubleUpArrow,
        st::Token_LongName_DoubleRightArrow => LongName_DoubleRightArrow,
        st::Token_LongName_DoubleDownArrow => LongName_DoubleDownArrow,
        st::Token_LongName_DoubleLeftRightArrow => LongName_DoubleLeftRightArrow,
        st::Token_LongName_DoubleUpDownArrow => LongName_DoubleUpDownArrow,
        st::Token_LongName_LeftArrowBar => LongName_LeftArrowBar,
        st::Token_LongName_RightArrowBar => LongName_RightArrowBar,
        st::Token_LongName_DownArrowUpArrow => LongName_DownArrowUpArrow,
        st::Token_LongName_ForAll => LongName_ForAll,
        st::Token_LongName_PartialD => LongName_PartialD,
        st::Token_LongName_Exists => LongName_Exists,
        st::Token_LongName_NotExists => LongName_NotExists,
        st::Token_LongName_Del => LongName_Del,
        st::Token_LongName_Element => LongName_Element,
        st::Token_LongName_NotElement => LongName_NotElement,
        st::Token_LongName_ReverseElement => LongName_ReverseElement,
        st::Token_LongName_NotReverseElement => LongName_NotReverseElement,
        st::Token_LongName_SuchThat => LongName_SuchThat,
        st::Token_LongName_Product => LongName_Product,
        st::Token_LongName_Coproduct => LongName_Coproduct,
        st::Token_LongName_Sum => LongName_Sum,
        st::Token_LongName_Minus => LongName_Minus,
        st::Token_LongName_MinusPlus => LongName_MinusPlus,
        st::Token_LongName_DivisionSlash => LongName_DivisionSlash,
        st::Token_LongName_Backslash => LongName_Backslash,
        st::Token_LongName_SmallCircle => LongName_SmallCircle,
        st::Token_LongName_Sqrt => LongName_Sqrt,
        st::Token_LongName_CubeRoot => LongName_CubeRoot,
        st::Token_LongName_Proportional => LongName_Proportional,
        st::Token_LongName_Divides => LongName_Divides,
        st::Token_LongName_DoubleVerticalBar => LongName_DoubleVerticalBar,
        st::Token_LongName_NotDoubleVerticalBar => LongName_NotDoubleVerticalBar,
        st::Token_LongName_And => LongName_And,
        st::Token_LongName_Or => LongName_Or,
        st::Token_LongName_Integral => LongName_Integral,
        st::Token_LongName_ContourIntegral => LongName_ContourIntegral,
        st::Token_LongName_DoubleContourIntegral => LongName_DoubleContourIntegral,
        st::Token_LongName_ClockwiseContourIntegral => LongName_ClockwiseContourIntegral,
        st::Token_LongName_CounterClockwiseContourIntegral => LongName_CounterClockwiseContourIntegral,
        st::Token_LongName_Therefore => LongName_Therefore,
        st::Token_LongName_Because => LongName_Because,
        st::Token_LongName_Colon => LongName_Colon,
        st::Token_LongName_Proportion => LongName_Proportion,
        st::Token_LongName_Tilde => LongName_Tilde,
        st::Token_LongName_VerticalTilde => LongName_VerticalTilde,
        st::Token_LongName_NotTilde => LongName_NotTilde,
        st::Token_LongName_EqualTilde => LongName_EqualTilde,
        st::Token_LongName_TildeEqual => LongName_TildeEqual,
        st::Token_LongName_NotTildeEqual => LongName_NotTildeEqual,
        st::Token_LongName_TildeFullEqual => LongName_TildeFullEqual,
        st::Token_LongName_NotTildeFullEqual => LongName_NotTildeFullEqual,
        st::Token_LongName_TildeTilde => LongName_TildeTilde,
        st::Token_LongName_NotTildeTilde => LongName_NotTildeTilde,
        st::Token_LongName_CupCap => LongName_CupCap,
        st::Token_LongName_HumpDownHump => LongName_HumpDownHump,
        st::Token_LongName_HumpEqual => LongName_HumpEqual,
        st::Token_LongName_DotEqual => LongName_DotEqual,
        st::Token_LongName_NotEqual => LongName_NotEqual,
        st::Token_LongName_Congruent => LongName_Congruent,
        st::Token_LongName_NotCongruent => LongName_NotCongruent,
        st::Token_LongName_LessEqual => LongName_LessEqual,
        st::Token_LongName_GreaterEqual => LongName_GreaterEqual,
        st::Token_LongName_LessFullEqual => LongName_LessFullEqual,
        st::Token_LongName_GreaterFullEqual => LongName_GreaterFullEqual,
        st::Token_LongName_NotLessFullEqual => LongName_NotLessFullEqual,
        st::Token_LongName_NotGreaterFullEqual => LongName_NotGreaterFullEqual,
        st::Token_LongName_LessLess => LongName_LessLess,
        st::Token_LongName_GreaterGreater => LongName_GreaterGreater,
        st::Token_LongName_NotCupCap => LongName_NotCupCap,
        st::Token_LongName_NotLess => LongName_NotLess,
        st::Token_LongName_NotGreater => LongName_NotGreater,
        st::Token_LongName_NotLessEqual => LongName_NotLessEqual,
        st::Token_LongName_NotGreaterEqual => LongName_NotGreaterEqual,
        st::Token_LongName_LessTilde => LongName_LessTilde,
        st::Token_LongName_GreaterTilde => LongName_GreaterTilde,
        st::Token_LongName_NotLessTilde => LongName_NotLessTilde,
        st::Token_LongName_NotGreaterTilde => LongName_NotGreaterTilde,
        st::Token_LongName_LessGreater => LongName_LessGreater,
        st::Token_LongName_GreaterLess => LongName_GreaterLess,
        st::Token_LongName_NotLessGreater => LongName_NotLessGreater,
        st::Token_LongName_NotGreaterLess => LongName_NotGreaterLess,
        st::Token_LongName_Precedes => LongName_Precedes,
        st::Token_LongName_Succeeds => LongName_Succeeds,
        st::Token_LongName_PrecedesSlantEqual => LongName_PrecedesSlantEqual,
        st::Token_LongName_SucceedsSlantEqual => LongName_SucceedsSlantEqual,
        st::Token_LongName_PrecedesTilde => LongName_PrecedesTilde,
        st::Token_LongName_SucceedsTilde => LongName_SucceedsTilde,
        st::Token_LongName_NotPrecedes => LongName_NotPrecedes,
        st::Token_LongName_NotSucceeds => LongName_NotSucceeds,
        st::Token_LongName_Subset => LongName_Subset,
        st::Token_LongName_Superset => LongName_Superset,
        st::Token_LongName_NotSubset => LongName_NotSubset,
        st::Token_LongName_NotSuperset => LongName_NotSuperset,
        st::Token_LongName_SubsetEqual => LongName_SubsetEqual,
        st::Token_LongName_SupersetEqual => LongName_SupersetEqual,
        st::Token_LongName_NotSubsetEqual => LongName_NotSubsetEqual,
        st::Token_LongName_NotSupersetEqual => LongName_NotSupersetEqual,
        st::Token_LongName_UnionPlus => LongName_UnionPlus,
        st::Token_LongName_SquareSubset => LongName_SquareSubset,
        st::Token_LongName_SquareSuperset => LongName_SquareSuperset,
        st::Token_LongName_SquareSubsetEqual => LongName_SquareSubsetEqual,
        st::Token_LongName_SquareSupersetEqual => LongName_SquareSupersetEqual,
        st::Token_LongName_SquareIntersection => LongName_SquareIntersection,
        st::Token_LongName_SquareUnion => LongName_SquareUnion,
        st::Token_LongName_CirclePlus => LongName_CirclePlus,
        st::Token_LongName_CircleMinus => LongName_CircleMinus,
        st::Token_LongName_CircleTimes => LongName_CircleTimes,
        st::Token_LongName_CircleDot => LongName_CircleDot,
        st::Token_LongName_RightTee => LongName_RightTee,
        st::Token_LongName_LeftTee => LongName_LeftTee,
        st::Token_LongName_DownTee => LongName_DownTee,
        st::Token_LongName_UpTee => LongName_UpTee,
        st::Token_LongName_DoubleRightTee => LongName_DoubleRightTee,
        st::Token_LongName_LeftTriangle => LongName_LeftTriangle,
        st::Token_LongName_RightTriangle => LongName_RightTriangle,
        st::Token_LongName_LeftTriangleEqual => LongName_LeftTriangleEqual,
        st::Token_LongName_RightTriangleEqual => LongName_RightTriangleEqual,
        st::Token_LongName_Xor => LongName_Xor,
        st::Token_LongName_Nand => LongName_Nand,
        st::Token_LongName_Nor => LongName_Nor,
        st::Token_LongName_Wedge => LongName_Wedge,
        st::Token_LongName_Vee => LongName_Vee,
        st::Token_LongName_Intersection => LongName_Intersection,
        st::Token_LongName_Union => LongName_Union,
        st::Token_LongName_Diamond => LongName_Diamond,
        st::Token_LongName_Star => LongName_Star,
        st::Token_LongName_LessEqualGreater => LongName_LessEqualGreater,
        st::Token_LongName_GreaterEqualLess => LongName_GreaterEqualLess,
        st::Token_LongName_NotPrecedesSlantEqual => LongName_NotPrecedesSlantEqual,
        st::Token_LongName_NotSucceedsSlantEqual => LongName_NotSucceedsSlantEqual,
        st::Token_LongName_NotSquareSubsetEqual => LongName_NotSquareSubsetEqual,
        st::Token_LongName_NotSquareSupersetEqual => LongName_NotSquareSupersetEqual,
        st::Token_LongName_NotPrecedesTilde => LongName_NotPrecedesTilde,
        st::Token_LongName_NotSucceedsTilde => LongName_NotSucceedsTilde,
        st::Token_LongName_NotLeftTriangle => LongName_NotLeftTriangle,
        st::Token_LongName_NotRightTriangle => LongName_NotRightTriangle,
        st::Token_LongName_NotLeftTriangleEqual => LongName_NotLeftTriangleEqual,
        st::Token_LongName_NotRightTriangleEqual => LongName_NotRightTriangleEqual,
        st::Token_LongName_LeftCeiling => LongName_LeftCeiling,
        st::Token_LongName_RightCeiling => LongName_RightCeiling,
        st::Token_LongName_LeftFloor => LongName_LeftFloor,
        st::Token_LongName_RightFloor => LongName_RightFloor,
        st::Token_LongName_Cap => LongName_Cap,
        st::Token_LongName_Cup => LongName_Cup,
        st::Token_LongName_LeftAngleBracket => LongName_LeftAngleBracket,
        st::Token_LongName_RightAngleBracket => LongName_RightAngleBracket,
        st::Token_LongName_Perpendicular => LongName_Perpendicular,
        st::Token_LongName_LongLeftArrow => LongName_LongLeftArrow,
        st::Token_LongName_LongRightArrow => LongName_LongRightArrow,
        st::Token_LongName_LongLeftRightArrow => LongName_LongLeftRightArrow,
        st::Token_LongName_DoubleLongLeftArrow => LongName_DoubleLongLeftArrow,
        st::Token_LongName_DoubleLongRightArrow => LongName_DoubleLongRightArrow,
        st::Token_LongName_DoubleLongLeftRightArrow => LongName_DoubleLongLeftRightArrow,
        st::Token_LongName_UpArrowBar => LongName_UpArrowBar,
        st::Token_LongName_DownArrowBar => LongName_DownArrowBar,
        st::Token_LongName_LeftRightVector => LongName_LeftRightVector,
        st::Token_LongName_RightUpDownVector => LongName_RightUpDownVector,
        st::Token_LongName_DownLeftRightVector => LongName_DownLeftRightVector,
        st::Token_LongName_LeftUpDownVector => LongName_LeftUpDownVector,
        st::Token_LongName_LeftVectorBar => LongName_LeftVectorBar,
        st::Token_LongName_RightVectorBar => LongName_RightVectorBar,
        st::Token_LongName_RightUpVectorBar => LongName_RightUpVectorBar,
        st::Token_LongName_RightDownVectorBar => LongName_RightDownVectorBar,
        st::Token_LongName_DownLeftVectorBar => LongName_DownLeftVectorBar,
        st::Token_LongName_DownRightVectorBar => LongName_DownRightVectorBar,
        st::Token_LongName_LeftUpVectorBar => LongName_LeftUpVectorBar,
        st::Token_LongName_LeftDownVectorBar => LongName_LeftDownVectorBar,
        st::Token_LongName_LeftTeeVector => LongName_LeftTeeVector,
        st::Token_LongName_RightTeeVector => LongName_RightTeeVector,
        st::Token_LongName_RightUpTeeVector => LongName_RightUpTeeVector,
        st::Token_LongName_RightDownTeeVector => LongName_RightDownTeeVector,
        st::Token_LongName_DownLeftTeeVector => LongName_DownLeftTeeVector,
        st::Token_LongName_DownRightTeeVector => LongName_DownRightTeeVector,
        st::Token_LongName_LeftUpTeeVector => LongName_LeftUpTeeVector,
        st::Token_LongName_LeftDownTeeVector => LongName_LeftDownTeeVector,
        st::Token_LongName_UpEquilibrium => LongName_UpEquilibrium,
        st::Token_LongName_ReverseUpEquilibrium => LongName_ReverseUpEquilibrium,
        st::Token_LongName_RoundImplies => LongName_RoundImplies,
        st::Token_LongName_LeftTriangleBar => LongName_LeftTriangleBar,
        st::Token_LongName_RightTriangleBar => LongName_RightTriangleBar,
        st::Token_LongName_Equivalent => LongName_Equivalent,
        st::Token_LongName_LessSlantEqual => LongName_LessSlantEqual,
        st::Token_LongName_GreaterSlantEqual => LongName_GreaterSlantEqual,
        st::Token_LongName_NestedLessLess => LongName_NestedLessLess,
        st::Token_LongName_NestedGreaterGreater => LongName_NestedGreaterGreater,
        st::Token_LongName_PrecedesEqual => LongName_PrecedesEqual,
        st::Token_LongName_SucceedsEqual => LongName_SucceedsEqual,
        st::Token_LongName_DoubleLeftTee => LongName_DoubleLeftTee,
        st::Token_LongName_LeftDoubleBracket => LongName_LeftDoubleBracket,
        st::Token_LongName_RightDoubleBracket => LongName_RightDoubleBracket,
        st::Token_LongName_LeftAssociation => LongName_LeftAssociation,
        st::Token_LongName_RightAssociation => LongName_RightAssociation,
        st::Token_LongName_TwoWayRule => LongName_TwoWayRule,
        st::Token_LongName_Piecewise => LongName_Piecewise,
        st::Token_LongName_ImplicitPlus => LongName_ImplicitPlus,
        st::Token_LongName_AutoLeftMatch => LongName_AutoLeftMatch,
        st::Token_LongName_AutoRightMatch => LongName_AutoRightMatch,
        st::Token_LongName_InvisiblePrefixScriptBase => LongName_InvisiblePrefixScriptBase,
        st::Token_LongName_InvisiblePostfixScriptBase => LongName_InvisiblePostfixScriptBase,
        st::Token_LongName_Transpose => LongName_Transpose,
        st::Token_LongName_Conjugate => LongName_Conjugate,
        st::Token_LongName_ConjugateTranspose => LongName_ConjugateTranspose,
        st::Token_LongName_HermitianConjugate => LongName_HermitianConjugate,
        st::Token_LongName_VerticalBar => LongName_VerticalBar,
        st::Token_LongName_NotVerticalBar => LongName_NotVerticalBar,
        st::Token_LongName_Distributed => LongName_Distributed,
        st::Token_LongName_Conditioned => LongName_Conditioned,
        st::Token_LongName_UndirectedEdge => LongName_UndirectedEdge,
        st::Token_LongName_DirectedEdge => LongName_DirectedEdge,
        st::Token_LongName_ContinuedFractionK => LongName_ContinuedFractionK,
        st::Token_LongName_TensorProduct => LongName_TensorProduct,
        st::Token_LongName_TensorWedge => LongName_TensorWedge,
        st::Token_LongName_ProbabilityPr => LongName_ProbabilityPr,
        st::Token_LongName_ExpectationE => LongName_ExpectationE,
        st::Token_LongName_PermutationProduct => LongName_PermutationProduct,
        st::Token_LongName_NotEqualTilde => LongName_NotEqualTilde,
        st::Token_LongName_NotHumpEqual => LongName_NotHumpEqual,
        st::Token_LongName_NotHumpDownHump => LongName_NotHumpDownHump,
        st::Token_LongName_NotLeftTriangleBar => LongName_NotLeftTriangleBar,
        st::Token_LongName_NotRightTriangleBar => LongName_NotRightTriangleBar,
        st::Token_LongName_NotLessLess => LongName_NotLessLess,
        st::Token_LongName_NotNestedLessLess => LongName_NotNestedLessLess,
        st::Token_LongName_NotLessSlantEqual => LongName_NotLessSlantEqual,
        st::Token_LongName_NotGreaterGreater => LongName_NotGreaterGreater,
        st::Token_LongName_NotNestedGreaterGreater => LongName_NotNestedGreaterGreater,
        st::Token_LongName_NotGreaterSlantEqual => LongName_NotGreaterSlantEqual,
        st::Token_LongName_NotPrecedesEqual => LongName_NotPrecedesEqual,
        st::Token_LongName_NotSucceedsEqual => LongName_NotSucceedsEqual,
        st::Token_LongName_NotSquareSubset => LongName_NotSquareSubset,
        st::Token_LongName_NotSquareSuperset => LongName_NotSquareSuperset,
        st::Token_LongName_Equal => LongName_Equal,
        st::Token_LongName_VerticalSeparator => LongName_VerticalSeparator,
        st::Token_LongName_VectorGreater => LongName_VectorGreater,
        st::Token_LongName_VectorGreaterEqual => LongName_VectorGreaterEqual,
        st::Token_LongName_VectorLess => LongName_VectorLess,
        st::Token_LongName_VectorLessEqual => LongName_VectorLessEqual,
        st::Token_LongName_Limit => LongName_Limit,
        st::Token_LongName_MaxLimit => LongName_MaxLimit,
        st::Token_LongName_MinLimit => LongName_MinLimit,
        st::Token_LongName_Cross => LongName_Cross,
        st::Token_LongName_Function => LongName_Function,
        st::Token_LongName_Xnor => LongName_Xnor,
        st::Token_LongName_DiscreteShift => LongName_DiscreteShift,
        st::Token_LongName_DifferenceDelta => LongName_DifferenceDelta,
        st::Token_LongName_DiscreteRatio => LongName_DiscreteRatio,
        st::Token_LongName_RuleDelayed => LongName_RuleDelayed,
        st::Token_LongName_Square => LongName_Square,
        st::Token_LongName_Rule => LongName_Rule,
        st::Token_LongName_Implies => LongName_Implies,
        st::Token_LongName_ShortRightArrow => LongName_ShortRightArrow,
        st::Token_LongName_ShortLeftArrow => LongName_ShortLeftArrow,
        st::Token_LongName_ShortUpArrow => LongName_ShortUpArrow,
        st::Token_LongName_ShortDownArrow => LongName_ShortDownArrow,
        st::Token_LongName_Application => LongName_Application,
        st::Token_LongName_LeftBracketingBar => LongName_LeftBracketingBar,
        st::Token_LongName_RightBracketingBar => LongName_RightBracketingBar,
        st::Token_LongName_LeftDoubleBracketingBar => LongName_LeftDoubleBracketingBar,
        st::Token_LongName_RightDoubleBracketingBar => LongName_RightDoubleBracketingBar,
        st::Token_LongName_CapitalDifferentialD => LongName_CapitalDifferentialD,
        st::Token_LongName_DifferentialD => LongName_DifferentialD,
        st::Token_LongName_InvisibleComma => LongName_InvisibleComma,
        st::Token_LongName_InvisibleApplication => LongName_InvisibleApplication,
        st::Token_LongName_LongEqual => LongName_LongEqual,
        _ => return None,
    };

    Some(token)
}
